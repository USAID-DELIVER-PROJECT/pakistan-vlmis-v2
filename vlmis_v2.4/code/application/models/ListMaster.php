<?php

/**
 * Model_ItemPackSizes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Logistics Management Information System for Vaccines
 * @subpackage Inventory Management
 * @author     Ajmal Hussain <ajmaleyetii@gmail.com>
 * @version    2
 */
class Model_ListMaster extends Model_Base {

    private $_table;

    const TEMPERATURE_RECORDING_SYSTEM = 1;
    const TYPE_OF_RECORDING_SYSTEM = 2;
    const REFRRIGERATOR_GAS_TYPE = 3;
    const HAS_WORKING_BACKUP_GENERATOR = 4;
    const FUEL_TYPE = 5;
    const USE_FOR = 6;
    const USER_ROLE_CATEGORIES = 8;
    const VACCINATION_STAFF = 9;
    const SOLAR_ENERGY = 10;
    const BARCODE_TYPE = 12;
    const EXPIRY_DATE_FORMAT = 13;
    const AREA = 14;
    const ROW = 15;
    const RACK = 16;
    const RACK_TYPE = 17;
    const PALLET = 18;
    const LEVEL = 19;
    const GRID_ELECTRICITY_AVAL = 20;
    const VEHICLE_TYPE = 21;
    const Location_Type = 22;
    const Vaccine_Supply_Mode = 24;
    const Service_Types = 25;
    const Temperature_Monitor = 28;
    const refrigerant_gas_type = 3;
    const power_source = 30;
    const packaging_level = 30;

    public function __construct() {
        parent::__construct();
        $this->_table = $this->_em->getRepository('ListMaster');
    }

    /*
     * Function Name :  getListDetailByType
     * Input         :  List Category Name (list_master_name of list_master table)
     * Output        :  It will return list detail entries according to input type/category
     */

    public function getListDetailByType() {
        $str_sql = $this->_em->createQueryBuilder()
                ->select('ld.pkId, ld.listValue')
                ->from('ListDetail', 'ld')
                ->innerJoin("ld.listMaster", "lm")
                ->where("lm.pkId = " . $this->form_values['pk_id']);
        if (isset($this->form_values['order'])) {
            $str_sql->orderBy('ld.listValue', $this->form_values['order']);
        } else {
            $str_sql->orderBy('ld.listValue', "ASC");
        }
        $row = $str_sql->getQuery()->getResult();
        if (!empty($row) && count($row) > 0) {
            return $row;
        } else {
            return false;
        }
    }

    public function getMasterList() {
        return $this->_table->findAll();
    }

}
