<?php

/**
 * Model_Locations
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Logistics Management Information System for Vaccines
 * @subpackage Inventory Management
 * @author     Ajmal Hussain <ajmaleyetii@gmail.com>
 * @version    2
 */
class Model_LogBook extends Model_Base {

    private $_table;

    public function __construct() {
        parent::__construct();
        $this->_table = $this->_em->getRepository('LogBook');
    }

    public function addLog() {


        $data = $this->form_values;
        // App_Controller_Functions::pr($data);
        $name = $data['name'];
        $father_name = $data['father_name'];
        $age = $data['age'];
        $contact = $data['contact'];
        $address = $data['address'];
        $district = $data['district'];
        $uc = $data['uc'];
        $item_id = $data['item_id'];
        $dose_no = $data['dose_no'];
        $vaccination_date = $data['vaccination_date'];
        $reffers_to = $data['reffers_to'];
        $remarks = $data['remarks'];
        $user_id = $this->_user_id;
        $warehouse_id = $this->_identity->getWarehouseId();
        $date = date("Y-m-d h:i:s");
        foreach ($district as $key => $val) {
            if ($val != '' && $val >= 0) {

                $log_book = new LogBook();
                $log_book->setName($name[$key]);
                $log_book->setFatherName($father_name[$key]);
                $log_book->setAge($age[$key]);
                $log_book->setContact($contact[$key]);
                $log_book->setAddress($address[$key]);
                $districtId = $this->_em->getRepository('Locations')->find($district[$key]);
                $log_book->setDistrictId($districtId);

                $ucId = $this->_em->getRepository('Locations')->find($uc[$key]);
                $log_book->setUnionCouncilId($ucId);
                $log_book->setVaccinationDate(new \DateTime(App_Controller_Functions::dateToDbFormat($vaccination_date[$key])));
                $log_book->setRefferTo($reffers_to[$key]);
                $log_book->setRemarks($remarks[$key]);
                // 
                $warehouse = $this->_em->getRepository('Warehouses')->find($warehouse_id);
                $log_book->setWarehouse($warehouse);
                $log_book->setCreatedDate(new \DateTime(App_Controller_Functions::dateToDbFormat($date)));
                $log_book->setCreatedBy($user_id);
                $this->_em->persist($log_book);
                $this->_em->flush();

                $log_book_id = $log_book->getPkId();

                foreach ($item_id as $key => $val) {
                    $log_book_item_doses = new LogBookItemDoses();
                    $logBook = $this->_em->getRepository('LogBook')->find($log_book_id);
                    $log_book_item_doses->setLogBookId($logBook);
                    $itemPack = $this->_em->getRepository('ItemPackSizes')->find($val);
                    $log_book_item_doses->setItemPackSize($itemPack);
                    $log_book_item_doses->setDoses($dose_no[$key]);
                    $this->_em->persist($log_book_item_doses);
                    $this->_em->flush();
                }
            }
        }
    }

    public function deleteLogBook($id) {

        $log_book_doses = $this->_em->getRepository("LogBookItemDoses")->findBy(array("logBook" => $id));

        if (count($log_book_doses) > 0) {
            $this->_em->remove($log_book_doses[0]->getLogBook());
            foreach ($log_book_doses as $log_doses) {
                $this->_em->remove($log_doses);
            }
        }

        $this->_em->flush();

        return true;
    }

    public function checkLogbookName() {
        $form_values = $this->form_values;

        $temp = $form_values['do'];

        $temp = base64_decode(substr($temp, 1, strlen($temp) - 1));

        $temp = explode("|", $temp);

        $warehouse_id = $temp[0];
        $rpt_date = $temp[1];
        $tt = explode("-", $rpt_date);
        $yy = $tt[0];
        $mm = $tt[1];

        $str_sql = $this->_em->createQueryBuilder()
                ->select("lb")
                ->from("LogBook", "lb")
                ->where("lb.name = '" . $form_values['name'] . "'")
                ->andWhere("lb.fatherName = '" . $form_values['fname'] . "'")
                ->andWhere("lb.warehouse = '" . $warehouse_id . "'")
                ->andWhere("DATE_FORMAT(lb.vaccinationDate,'%Y-%m') = '" . $yy . "-" . $mm . "'");

        $result = $str_sql->getQuery()->getResult();

        if (count($result) > 0) {
            echo 1;
        } else {
            echo 0;
        }
    }
       public function getLogBook($wh_id,$date_in) {
            $querypro = "SELECT
                    log_book.pk_id
                    FROM
                    log_book
                    WHERE
                    log_book.warehouse_id = '$wh_id' AND
                    DATE_FORMAT(log_book.vaccination_date,'%Y-%m') = '$date_in' ";
        $this->_em = Zend_Registry::get('doctrine');
        $row = $this->_em->getConnection()->prepare($querypro);

        $row->execute();
        return $row->fetchAll();
       }

}
