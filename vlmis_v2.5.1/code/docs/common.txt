To get Sql Query from Doctrine 2

//echo $str_sql->getQuery()->getSql();
//exit();

Try Catch

try {
            $row = $db->getQuery()->getResult();
            $db->flush();
        } catch (Exception $e) {
            $m = $e->getMessage();
            echo $m . "<br />\n";
        }


//FOR DOCTRINE Query Builder USE THIS OBJECT 
$this->_qb

//FOR RAW SQL PLAIN QUERIES OR DB FUNCTIONS AND STORED PROCEDURES USE THIS OBJECT 
$this->_query

//Sample function
    function getUserLevel($user_id, $user_type) {
        $str_sql = $this->_qb->select('wu')
                ->from("WarehouseUsers", "wu")
                ->join("wu.user", "u")
                ->join("wu.warehouse", "wh")
                ->join("wh.stakeholder", "sh")
                ->where("u.pkId = $user_id ")
                ->andWhere("wu.isDefault =  1 ");

        try {
            $row = $str_sql->getQuery()->getResult();
        } catch (Exception $e) {
            $m = $e->getMessage();
            echo $m . "<br />\n";
        }

        if ($row !== false) {
            return $row[0]->getWarehouse()->getStakeholder()->getGeoLevel()->getPkId();
        } else {
            return false;
        }
    }


$query = $qb->getQuery();

// Set additional Query options
$query->setQueryHint('foo', 'bar');
$query->useResultCache('my_cache_id');

// Execute Query
$result = $query->getResult();
$single = $query->getSingleResult();
$array = $query->getArrayResult();
$scalar = $query->getScalarResult();
$singleScalar = $query->getSingleScalarResult();

// $em instanceof EntityManager
$em->getConnection()->beginTransaction(); // suspend auto-commit
try {
    //... do some work
    $user = new User;
    $user->setName('George');
    $em->persist($user);
    $em->flush();
    $em->getConnection()->commit();
} catch (Exception $e) {
    $em->getConnection()->rollback();
    $em->close();
    throw $e;
}


Language Translation in view files
    <?php echo $this->translate("Welcome"); ?>

Language Translation in Helpers
    $translate = Zend_Registry::get('Zend_Translate');
    echo $translate->translate('Welcome');


