<?php

namespace Doctrine\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class PackInfoProxy extends \PackInfo implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getPkId()
    {
        $this->__load();
        return parent::getPkId();
    }

    public function setPackSizeDescription($packSizeDescription)
    {
        $this->__load();
        return parent::setPackSizeDescription($packSizeDescription);
    }

    public function getPackSizeDescription()
    {
        $this->__load();
        return parent::getPackSizeDescription();
    }

    public function setLength($length)
    {
        $this->__load();
        return parent::setLength($length);
    }

    public function getLength()
    {
        $this->__load();
        return parent::getLength();
    }

    public function setWidth($width)
    {
        $this->__load();
        return parent::setWidth($width);
    }

    public function getWidth()
    {
        $this->__load();
        return parent::getWidth();
    }

    public function setHeight($height)
    {
        $this->__load();
        return parent::setHeight($height);
    }

    public function getHeight()
    {
        $this->__load();
        return parent::getHeight();
    }

    public function setQuantityPerPack($quantityPerPack)
    {
        $this->__load();
        return parent::setQuantityPerPack($quantityPerPack);
    }

    public function getQuantityPerPack()
    {
        $this->__load();
        return parent::getQuantityPerPack();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setListRank($listRank)
    {
        $this->__load();
        return parent::setListRank($listRank);
    }

    public function getListRank()
    {
        $this->__load();
        return parent::getListRank();
    }

    public function setVolumPerVial($volumPerVial)
    {
        $this->__load();
        return parent::setVolumPerVial($volumPerVial);
    }

    public function getVolumPerVial()
    {
        $this->__load();
        return parent::getVolumPerVial();
    }

    public function setItemGtin($itemGtin)
    {
        $this->__load();
        return parent::setItemGtin($itemGtin);
    }

    public function getItemGtin()
    {
        $this->__load();
        return parent::getItemGtin();
    }

    public function setCreatedDate($createdDate)
    {
        $this->__load();
        return parent::setCreatedDate($createdDate);
    }

    public function getCreatedDate()
    {
        $this->__load();
        return parent::getCreatedDate();
    }

    public function setModifiedDate($modifiedDate)
    {
        $this->__load();
        return parent::setModifiedDate($modifiedDate);
    }

    public function getModifiedDate()
    {
        $this->__load();
        return parent::getModifiedDate();
    }

    public function setModifiedBy(\Users $modifiedBy)
    {
        $this->__load();
        return parent::setModifiedBy($modifiedBy);
    }

    public function getModifiedBy()
    {
        $this->__load();
        return parent::getModifiedBy();
    }

    public function setStakeholderItemPackSize(\StakeholderItemPackSizes $stakeholderItemPackSize)
    {
        $this->__load();
        return parent::setStakeholderItemPackSize($stakeholderItemPackSize);
    }

    public function getStakeholderItemPackSize()
    {
        $this->__load();
        return parent::getStakeholderItemPackSize();
    }

    public function setPackagingLevel(\ListDetail $packagingLevel)
    {
        $this->__load();
        return parent::setPackagingLevel($packagingLevel);
    }

    public function getPackagingLevel()
    {
        $this->__load();
        return parent::getPackagingLevel();
    }

    public function setCreatedBy(\Users $createdBy)
    {
        $this->__load();
        return parent::setCreatedBy($createdBy);
    }

    public function getCreatedBy()
    {
        $this->__load();
        return parent::getCreatedBy();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'pkId', 'packSizeDescription', 'length', 'width', 'height', 'quantityPerPack', 'status', 'listRank', 'volumPerVial', 'itemGtin', 'createdDate', 'modifiedDate', 'modifiedBy', 'stakeholderItemPackSize', 'packagingLevel', 'createdBy');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}