<?php

namespace Doctrine\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ResourcesProxy extends \Resources implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getPkId()
    {
        $this->__load();
        return parent::getPkId();
    }

    public function setResourceName($resourceName)
    {
        $this->__load();
        return parent::setResourceName($resourceName);
    }

    public function getResourceName()
    {
        $this->__load();
        return parent::getResourceName();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setPageTitle($pageTitle)
    {
        $this->__load();
        return parent::setPageTitle($pageTitle);
    }

    public function getPageTitle()
    {
        $this->__load();
        return parent::getPageTitle();
    }

    public function setMetaTitle($metaTitle)
    {
        $this->__load();
        return parent::setMetaTitle($metaTitle);
    }

    public function getMetaTitle()
    {
        $this->__load();
        return parent::getMetaTitle();
    }

    public function setMetaDescription($metaDescription)
    {
        $this->__load();
        return parent::setMetaDescription($metaDescription);
    }

    public function getMetaDescription()
    {
        $this->__load();
        return parent::getMetaDescription();
    }

    public function setRank($rank)
    {
        $this->__load();
        return parent::setRank($rank);
    }

    public function getRank()
    {
        $this->__load();
        return parent::getRank();
    }

    public function setLevel($level)
    {
        $this->__load();
        return parent::setLevel($level);
    }

    public function getLevel()
    {
        $this->__load();
        return parent::getLevel();
    }

    public function setParentId($parentId)
    {
        $this->__load();
        return parent::setParentId($parentId);
    }

    public function getParentId()
    {
        $this->__load();
        return parent::getParentId();
    }

    public function setIconClass($iconClass)
    {
        $this->__load();
        return parent::setIconClass($iconClass);
    }

    public function getIconClass()
    {
        $this->__load();
        return parent::getIconClass();
    }

    public function setCreatedDate($createdDate)
    {
        $this->__load();
        return parent::setCreatedDate($createdDate);
    }

    public function getCreatedDate()
    {
        $this->__load();
        return parent::getCreatedDate();
    }

    public function setModifiedDate($modifiedDate)
    {
        $this->__load();
        return parent::setModifiedDate($modifiedDate);
    }

    public function getModifiedDate()
    {
        $this->__load();
        return parent::getModifiedDate();
    }

    public function setModifiedBy(\Users $modifiedBy)
    {
        $this->__load();
        return parent::setModifiedBy($modifiedBy);
    }

    public function getModifiedBy()
    {
        $this->__load();
        return parent::getModifiedBy();
    }

    public function setResourceType(\ResourceTypes $resourceType)
    {
        $this->__load();
        return parent::setResourceType($resourceType);
    }

    public function getResourceType()
    {
        $this->__load();
        return parent::getResourceType();
    }

    public function setCreatedBy(\Users $createdBy)
    {
        $this->__load();
        return parent::setCreatedBy($createdBy);
    }

    public function getCreatedBy()
    {
        $this->__load();
        return parent::getCreatedBy();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'pkId', 'resourceName', 'description', 'pageTitle', 'metaTitle', 'metaDescription', 'rank', 'level', 'parentId', 'iconClass', 'createdDate', 'modifiedDate', 'modifiedBy', 'resourceType', 'createdBy');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}