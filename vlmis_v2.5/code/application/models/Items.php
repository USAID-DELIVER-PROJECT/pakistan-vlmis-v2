<?php

/**
 * Model_Items
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    Logistics Management Information System for Vaccines
 * @subpackage Cold Chain
 * @author     Bushra Saeed <bushrajsi1@gmail.com>
 * @version    2
 */
class Model_Items extends Model_Base {

    private $_table;

    public function __construct() {
        parent::__construct();
        $this->_table = $this->_em->getRepository('Items');
    }

    public function getItems() {
        $str_sql = $this->_em->createQueryBuilder()
                ->select("i.pkId,i.description")
                ->from('Items', 'i');
        //echo $str_sql->getQuery()->getSql();die;
        $row = $str_sql->getQuery()->getResult();
        if (!empty($row) && count($row) > 0) {
            return $row;
        } else {
            return false;
        }
    }

    public function getAllItems() {
        $str_sql = $this->_em->createQueryBuilder()
                ->select("i.pkId, i.description")
                ->from("Items", "i");
        if (!empty($this->form_values['item_description'])) {
            $str_sql->where("i.description = '" . $this->form_values['item_description'] . "' ");
        }
        return $row = $str_sql->getQuery()->getResult();
    }

    /* public function getItemsByCategory() {
      $str_sql = $this->_em->createQueryBuilder()
      ->select("i.pkId as itemId,i.description,ips.pkId")
      ->from("ItemPackSizes", "ips")
      ->join("ips.item", "i")
      ->where("ips.itemCategory = 2");
      $str_sql->getQuery()->getSql();
      $row = $str_sql->getQuery()->getResult();
      if (!empty($row) && count($row) > 0) {
      return $row;
      } else {
      return false;
      }
      } */

    public function checkItem() {
        $form_values = $this->form_values;

        $str_sql = $this->_em->createQueryBuilder()
                ->select("i.pkId")
                ->from('Items', 'i')
                ->where("i.description= '" . $form_values . "' ");

        $rs = $str_sql->getQuery()->getResult();
        return $rs;
    }

    /**
     * @uses api Barcode
     * @return type
     */
    public function getItemCategories() {
        $str_sql = $this->_em->getConnection()->prepare("SELECT
        item_categories.pk_id,
        item_categories.item_category_name,
        item_categories.`status`
        FROM
        item_categories");
        $str_sql->execute();
        return $str_sql->fetchAll();
    }

    /**
     * @uses api Barcode
     * @return type
     */
    public function getItemPackSizes() {
        $str_sql = $this->_em->getConnection()->prepare("SELECT
        * FROM
        item_pack_sizes");
        $str_sql->execute();
        return $str_sql->fetchAll();
    }

    /**
     * @uses api Barcode
     * @return type
     */
    public function getItemUnits() {
        $str_sql = $this->_em->getConnection()->prepare("SELECT
        item_units.item_unit_name,
        item_units.pk_id
        FROM
        item_units");
        $str_sql->execute();
        return $str_sql->fetchAll();
    }

    /**
     * @uses api Barcode
     * @return type
     */
    public function getStakeholderItems() {
        $str_sql = $this->_em->getConnection()->prepare("SELECT
        * FROM
        stakeholder_item_pack_sizes");
        $str_sql->execute();
        return $str_sql->fetchAll();
    }
    
     /**
     * @uses api Barcode
     * @return type
     */
    public function getStakeholderItemPackSizes() {
        $str_sql = $this->_em->getConnection()->prepare("SELECT
        * FROM
        stakeholder_item_pack_sizes");
        $str_sql->execute();
        return $str_sql->fetchAll();
    }

}
